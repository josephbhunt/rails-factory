#!/usr/bin/env bash

RUBY_VERSION=3.4.4
RAILS_VERSION=8.0.2

print_help() {
  cat <<EOF
Usage: $0 [options] <path_to_repo>

Options:
  -g, --rails-gem-path    Path to the a rails gem file on the host machine
  -h, --help              Show this help message
  -s, --skip-build        Skip building the Docker image
  -V, --ruby-version      Specify the Ruby version (default: $RUBY_VERSION)
  -v, --rails-version     Specify the Rails version (default: $RAILS_VERSION)
  
  

Arguments:
  <path_to_repo>          Path to the new Rails repository
  --                      End of options. All following arguments will be passed to "rails new"

Example:
  $ rails-factory -V 3.3 -v 7.2 /path/to/new/repo -- --devcontainer
EOF
}

base_dockerfile() {
  cat <<EOF > Dockerfile
ARG RUBY_VERSION=3.3
FROM ruby:${RUBY_VERSION}
ARG RAILS_VERSION=7.2
WORKDIR /app
RUN gem update --system
EOF
}

rails_dockerfile() {
  base_dockerfile

  cat <<EOF >> Dockerfile

  RUN gem install rails -v ${RAILS_VERSION}
EOF
  echo `cat ./Dockerfile`
}

image_name() {
  if [ -z "$GEM_PATH" ]; then
    echo "rails-factory-$RUBY_VERSION-$RAILS_VERSION"
  else
    echo "rails-factory-$RUBY_VERSION-$GEM_NAME"
  fi
}

BUILD=true

while [[ $# -gt 0 ]]; do
  case $1 in
    -s|--skip-build)
      BUILD=false
      shift
      ;;
    -V|--ruby-version)
      RUBY_VERSION="$2"
      shift
      shift
      ;;
    -v|--rails-version)
      RAILS_VERSION="$2"
      shift
      shift
      ;;
    -h|--help)
      print_help
      exit 0
      ;;
    -g|--rails-gem-path)
      GEM_PATH=$(dirname "$2")
      GEM_NAME=$(basename "$2" .gem)
      shift
      shift
      ;;
    --)
      shift
      RAILS_PARAMS="$*"
      break
      ;;      
    *)
      full_path=`mkdir -p $(dirname "$1") && echo "$1"`
      PATH_TO_REPO=$(dirname "$full_path")
      NAME=$(basename "$full_path")
      shift
      ;;
  esac
done

if [ -z "$PATH_TO_REPO" ]; then
  echo "You must pass in the path to the new repo"
  exit 1
fi

if [ "$BUILD" = true ]; then
  echo "Building docker image with command: docker build --build-arg RUBY_VERSION=$RUBY_VERSION --build-arg RAILS_VERSION=$RAILS_VERSION -t $(image_name) ."
  if [ -z "$GEM_PATH" ]; then
    rails_dockerfile
  else
    base_dockerfile
  fi
  
  docker build --build-arg RUBY_VERSION=$RUBY_VERSION --build-arg RAILS_VERSION=$RAILS_VERSION -t $(image_name) .
  rm "Dockerfile"
else
  echo "Skipping build..."
fi

image_exists=`docker images | grep $(image_name)`
if [ -z "$image_exists" ]; then
  echo "Image does not exist. You must build it first."
  exit 1
fi

echo "Generating the new rails repo in $PATH_TO_REPO/$NAME"
if [ -n "$GEM_PATH" ]; then
  command="(gem list -i $GEM_NAME || gem install /gems/$GEM_NAME.gem) && rails new $NAME $RAILS_PARAMS"
  docker run -it -v $PATH_TO_REPO:/app -v $GEM_PATH:/gems $(image_name) bash -c "$command"
else
  docker run -it -v $PATH_TO_REPO:/app $(image_name) bash -c "rails new $NAME $RAILS_PARAMS"
fi

